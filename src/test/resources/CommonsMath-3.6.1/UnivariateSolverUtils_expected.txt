org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.solve(org.apache.commons.math3.analysis.UnivariateFunction, double, double) throws org.apache.commons.math3.exception.NoBracketingException if the function has the same sign at the endpoints. ==> []
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.solve(org.apache.commons.math3.analysis.UnivariateFunction, double, double) throws org.apache.commons.math3.exception.NullArgumentException if function is null. ==> [args[0]==null]
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.solve(org.apache.commons.math3.analysis.UnivariateFunction, double, double, double) throws org.apache.commons.math3.exception.NoBracketingException if the function has the same sign at the endpoints. ==> []
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.solve(org.apache.commons.math3.analysis.UnivariateFunction, double, double, double) throws org.apache.commons.math3.exception.NullArgumentException if function is null. ==> [args[0]==null]
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.forceSide(int, org.apache.commons.math3.analysis.UnivariateFunction, org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver<org.apache.commons.math3.analysis.UnivariateFunction>, double, double, double, org.apache.commons.math3.analysis.solvers.AllowedSolution) throws org.apache.commons.math3.exception.NoBracketingException if the function has the same sign at the endpoints. ==> []
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.bracket(org.apache.commons.math3.analysis.UnivariateFunction, double, double, double) throws org.apache.commons.math3.exception.NoBracketingException if a root cannot be bracketted. ==> []
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.bracket(org.apache.commons.math3.analysis.UnivariateFunction, double, double, double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException if maximumIterations <= 0. ==> []
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.bracket(org.apache.commons.math3.analysis.UnivariateFunction, double, double, double) throws org.apache.commons.math3.exception.NullArgumentException if function is null. ==> [args[0]==null]
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.bracket(org.apache.commons.math3.analysis.UnivariateFunction, double, double, double, int) throws org.apache.commons.math3.exception.NoBracketingException if the algorithm fails to find a and b satisfying the desired conditions. ==> []
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.bracket(org.apache.commons.math3.analysis.UnivariateFunction, double, double, double, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException if maximumIterations <= 0. ==> [args[4]<=0]
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.bracket(org.apache.commons.math3.analysis.UnivariateFunction, double, double, double, int) throws org.apache.commons.math3.exception.NullArgumentException if function is null. ==> [args[0]==null]
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.bracket(org.apache.commons.math3.analysis.UnivariateFunction, double, double, double, double, double, int) throws org.apache.commons.math3.exception.NoBracketingException if function cannot be bracketed in the search interval ==> []
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.isBracketing(org.apache.commons.math3.analysis.UnivariateFunction, double, double) throws org.apache.commons.math3.exception.NullArgumentException if function is null. ==> [args[0]==null]
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifyInterval(double, double) throws org.apache.commons.math3.exception.NumberIsTooLargeException if lower >= upper. ==> [args[0]>=args[1]]
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifySequence(double, double, double) throws org.apache.commons.math3.exception.NumberIsTooLargeException if lower >= initial or initial >= upper. ==> [args[0]>=args[1]||args[1]>=args[2]]
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifyBracketing(org.apache.commons.math3.analysis.UnivariateFunction, double, double) throws org.apache.commons.math3.exception.NoBracketingException if the function has the same sign at the endpoints. ==> []
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifyBracketing(org.apache.commons.math3.analysis.UnivariateFunction, double, double) throws org.apache.commons.math3.exception.NullArgumentException if function is null. ==> [args[0]==null]
