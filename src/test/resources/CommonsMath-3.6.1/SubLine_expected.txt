org.apache.commons.math3.geometry.euclidean.threed.SubLine(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.Vector3D, double) throws org.apache.commons.math3.exception.MathIllegalArgumentException if the points are equal ==> [args[0].equals(args[1])]
org.apache.commons.math3.geometry.euclidean.threed.SubLine(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.Vector3D) throws org.apache.commons.math3.exception.MathIllegalArgumentException if the points are equal ==> [args[0].equals(args[1])]
org.apache.commons.math3.geometry.euclidean.threed.SubLine(org.apache.commons.math3.geometry.euclidean.threed.Segment) throws org.apache.commons.math3.exception.MathIllegalArgumentException if the segment endpoints are equal ==> [args[0].equals(args[1])]
org.apache.commons.math3.geometry.euclidean.threed.SubLine.buildIntervalSet(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.Vector3D, double) throws org.apache.commons.math3.exception.MathIllegalArgumentException if the points are equal ==> []
