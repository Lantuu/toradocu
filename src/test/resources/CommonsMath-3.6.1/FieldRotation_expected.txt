org.apache.commons.math3.geometry.euclidean.threed.FieldRotation(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>, T) throws org.apache.commons.math3.exception.MathIllegalArgumentException if the axis norm is zero ==> [args[0].getNorm().getReal()==0]
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>, T, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention) throws org.apache.commons.math3.exception.MathIllegalArgumentException if the axis norm is zero ==> [args[0].getNorm().getReal()==0]
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation(T[][], double) throws org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException if the matrix is not a 3X3 matrix, or if it cannot be transformed into an orthogonal matrix with the given threshold, or if the determinant of the resulting orthogonal matrix is negative ==> [(args[0].length!=3)||(args[0][0].length!=3)||(args[0][1].length!=3)||(args[0][2].length!=3)]
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>) throws org.apache.commons.math3.exception.MathArithmeticException if the norm of one of the vectors is zero, or if one of the pair is degenerated (i.e. the vectors of the pair are collinear) ==> [args[0].getNorm().getReal()==0||args[1].getNorm().getReal()==0||args[2].getNorm().getReal()==0]
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>) throws org.apache.commons.math3.exception.MathArithmeticException if the norm of one of the vectors is zero ==> [args[0].getNorm().getReal()==0||args[1].getNorm().getReal()==0]
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.getAngles(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder) throws org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException if the rotation is singular with respect to the angles set specified ==> []
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.getAngles(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention) throws org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException if the rotation is singular with respect to the angles set specified ==> []
