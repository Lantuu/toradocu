org.apache.commons.math3.analysis.integration.SimpsonIntegrator(double, double, int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException if minimal number of iterations is not strictly positive ==> [(args[2]>0)==false]
org.apache.commons.math3.analysis.integration.SimpsonIntegrator(double, double, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException if maximal number of iterations is lesser than or equal to the minimal number of iterations ==> [args[3]<=args[2]]
org.apache.commons.math3.analysis.integration.SimpsonIntegrator(double, double, int, int) throws org.apache.commons.math3.exception.NumberIsTooLargeException if maximal number of iterations is greater than SIMPSON_MAX_ITERATIONS_COUNT ==> [args[3]>target.SIMPSON_MAX_ITERATIONS_COUNT]
org.apache.commons.math3.analysis.integration.SimpsonIntegrator(int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException if minimal number of iterations is not strictly positive ==> [(args[0]>0)==false]
org.apache.commons.math3.analysis.integration.SimpsonIntegrator(int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException if maximal number of iterations is lesser than or equal to the minimal number of iterations ==> [args[1]<=args[0]]
org.apache.commons.math3.analysis.integration.SimpsonIntegrator(int, int) throws org.apache.commons.math3.exception.NumberIsTooLargeException if maximal number of iterations is greater than SIMPSON_MAX_ITERATIONS_COUNT ==> [args[1]>target.SIMPSON_MAX_ITERATIONS_COUNT]
