org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator(int, double, double, int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException if minimal number of iterations or number of points are not strictly positive. ==> [args[0]<=0||args[3]<=0]
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator(int, double, double, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException if maximal number of iterations is smaller than or equal to the minimal number of iterations. ==> [args[4]<=args[3]]
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator(int, double, double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException if n < 1. ==> [args[0]<1]
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator(int, int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException if minimal number of iterations is not strictly positive. ==> [args[1]<=0]
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator(int, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException if maximal number of iterations is smaller than or equal to the minimal number of iterations. ==> [args[2]<=args[1]]
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator(int, int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException if n < 1. ==> [args[0]<1]
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.incrementCount() throws org.apache.commons.math3.exception.MaxCountExceededException if the number of iterations exceeds the allowed maximum number ==> []
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) throws org.apache.commons.math3.exception.TooManyEvaluationsException if the maximal number of function evaluations is exceeded. ==> []
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.setup(int, org.apache.commons.math3.analysis.UnivariateFunction, double, double) throws org.apache.commons.math3.exception.NullArgumentException if f is null. ==> [args[1]==null]
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.setup(int, org.apache.commons.math3.analysis.UnivariateFunction, double, double) throws org.apache.commons.math3.exception.MathIllegalArgumentException if min >= max. ==> []
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.integrate(int, org.apache.commons.math3.analysis.UnivariateFunction, double, double) throws org.apache.commons.math3.exception.TooManyEvaluationsException if the maximum number of function evaluations is exceeded ==> []
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.integrate(int, org.apache.commons.math3.analysis.UnivariateFunction, double, double) throws org.apache.commons.math3.exception.MaxCountExceededException if the maximum iteration count is exceeded or the integrator detects convergence problems otherwise ==> []
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.integrate(int, org.apache.commons.math3.analysis.UnivariateFunction, double, double) throws org.apache.commons.math3.exception.MathIllegalArgumentException if min > max or the endpoints do not satisfy the requirements specified by the integrator ==> []
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.integrate(int, org.apache.commons.math3.analysis.UnivariateFunction, double, double) throws org.apache.commons.math3.exception.NullArgumentException if f is null. ==> [args[1]==null]
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator.stage(int) throws org.apache.commons.math3.exception.TooManyEvaluationsException if the maximum number of evaluations is exceeded. ==> []
