org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator(int, double, double, int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException if minimal number of iterations or number of points are not strictly positive. ==> [args[0]<=0||args[3]<=0]
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator(int, double, double, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException if maximal number of iterations is smaller than or equal to the minimal number of iterations. ==> [args[4]<=args[3]]
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator(int, double, double) throws org.apache.commons.math3.exception.NotStrictlyPositiveException if n < 1. ==> [args[0]<1]
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator(int, int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException if minimal number of iterations is not strictly positive. ==> [(args[1]>0)==false]
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator(int, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException if maximal number of iterations is smaller than or equal to the minimal number of iterations. ==> [args[2]<=args[1]]
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator(int, int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException if n < 1. ==> [args[0]<1]
