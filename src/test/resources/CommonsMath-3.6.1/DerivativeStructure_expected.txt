org.apache.commons.math3.analysis.differentiation.DerivativeStructure(double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders are inconsistent ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders are inconsistent ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders are inconsistent ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int, int) throws org.apache.commons.math3.exception.NumberIsTooLargeException if order is too large ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int, int, double) throws org.apache.commons.math3.exception.NumberIsTooLargeException if order is too large ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int, int, double...) throws org.apache.commons.math3.exception.DimensionMismatchException if derivatives array does not match the size expected by the compiler ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int, int, double...) throws org.apache.commons.math3.exception.NumberIsTooLargeException if order is too large ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int, int, int, double) throws org.apache.commons.math3.exception.NumberIsTooLargeException if index >= parameters. ==> [args[2]>=args[0]]
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders do not match ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atan2(org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders do not match ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.compose(double...) throws org.apache.commons.math3.exception.DimensionMismatchException if the number of derivatives in the array is not equal to order + 1 ==> [args[0].length!=target.getOrder()+1]
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.divide(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders do not match ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getPartialDerivative(int...) throws org.apache.commons.math3.exception.DimensionMismatchException if the numbers of variables does not match the instance ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getPartialDerivative(int...) throws org.apache.commons.math3.exception.NumberIsTooLargeException if sum of derivation orders is larger than the instance limits ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.hypot(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders do not match ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.hypot(org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders do not match ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders do not match ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders do not match ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, double, org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders do not match ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(double[], org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders do not match ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders do not match ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders do not match ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure, org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders do not match ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[], org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders do not match ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders do not match ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.pow(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders do not match ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.remainder(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders do not match ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.subtract(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if number of free parameters or orders do not match ==> []
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.taylor(double...) throws org.apache.commons.math3.exception.MathArithmeticException if factorials becomes too large ==> []
