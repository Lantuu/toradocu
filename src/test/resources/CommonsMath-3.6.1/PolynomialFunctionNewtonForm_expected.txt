org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm(double[], double[]) throws org.apache.commons.math3.exception.NullArgumentException if any argument is null. ==> [args[0]==null||args[1]==null]
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm(double[], double[]) throws org.apache.commons.math3.exception.NoDataException if any array has zero length. ==> [args[0].length==0||args[1].length==0]
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm(double[], double[]) throws org.apache.commons.math3.exception.DimensionMismatchException if the size difference between a and c is not equal to 1. ==> [((args[0].length-args[1].length)==1)==false]
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double) throws java.lang.IllegalArgumentException when the activated method itself can ascertain that a precondition, specified in the API expressed at the level of the activated method, has been violated. When Commons Math throws an IllegalArgumentException, it is usually the consequence of checking the actual parameters passed to the method. ==> []
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) throws org.apache.commons.math3.exception.DimensionMismatchException if t is inconsistent with the function's free parameters or order ==> []
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.evaluate(double[], double[], double) throws org.apache.commons.math3.exception.NullArgumentException if any argument is null. ==> [args[0]==null||args[1]==null]
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.evaluate(double[], double[], double) throws org.apache.commons.math3.exception.NoDataException if any array has zero length. ==> [args[0].length==0||args[1].length==0]
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.evaluate(double[], double[], double) throws org.apache.commons.math3.exception.DimensionMismatchException if the size difference between a and c is not equal to 1. ==> [((args[0].lenght-args[1].length)==1)==false]
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.verifyInputArray(double[], double[]) throws org.apache.commons.math3.exception.NullArgumentException if any argument is null. ==> [args[0]==null||args[1]==null]
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.verifyInputArray(double[], double[]) throws org.apache.commons.math3.exception.NoDataException if any array has zero length. ==> [args[0].length==0||args[1].length==0]
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.verifyInputArray(double[], double[]) throws org.apache.commons.math3.exception.DimensionMismatchException if the size difference between a and c is not equal to 1. ==> [((args[0].length-args[1].length)==1)==false]
